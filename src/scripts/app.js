/**
 * –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è BeautyBook
 */

import { API } from './api.js';
import { router } from './router.js';
import { telegramApp } from './telegram.js';
import { showLoading, hideLoading, formatDate, formatTime, formatPrice } from './utils.js';

class App {
    constructor() {
        this.api = new API();
        this.state = {
            salon: null,
            categories: [],
            masters: [],
            services: [],
            bookings: [],
            currentMaster: null,
            currentService: null,
            bookingData: {}
        };
        
        this.init();
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    async init() {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è BeautyBook...');
        
        try {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram Web App
            if (window.Telegram?.WebApp) {
                telegramApp.init();
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
            showLoading();
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            await this.loadInitialData();
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–æ—É—Ç–µ—Ä
            this.setupRouter();
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            this.setupNavigation();
            
            // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
            hideLoading();
            
            console.log('‚úÖ BeautyBook –≥–æ—Ç–æ–≤!');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
            this.showErrorScreen('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            hideLoading();
        }
    }
    
    /**
     * –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
     */
    async loadInitialData() {
        try {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∞–ª–æ–Ω–µ
            const salon = await this.api.getSalon();
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            this.state.salon = salon;
            
            console.log('–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', { salon });
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
            throw error;
        }
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–æ—É—Ç–µ—Ä
     */
    setupRouter() {
        // –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        router.on('/', () => this.renderHome());
        
        // –ú–∞—Å—Ç–µ—Ä–∞
        router.on('/masters', () => this.renderMasters());
        router.on('/masters/:id', (params) => this.renderMasterDetail(params.id));
        
        // –ú–æ–∏ –∑–∞–ø–∏—Å–∏
        router.on('/bookings', () => this.renderMyBookings());
        
        // –ü—Ä–æ—Ñ–∏–ª—å
        router.on('/profile', () => this.renderProfile());
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–æ—É—Ç–µ—Ä
        router.init();
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é
     */
    setupNavigation() {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –Ω–∏–∂–Ω–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        document.addEventListener('click', (e) => {
            const navItem = e.target.closest('.nav-item');
            if (navItem) {
                e.preventDefault();
                const route = navItem.getAttribute('data-route');
                if (route) {
                    router.navigate(route);
                    // Haptic feedback –¥–ª—è Telegram
                    if (window.Telegram?.WebApp?.HapticFeedback) {
                        window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
                    }
                }
            }
        });
    }
    
    /**
     * –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
     */
    async renderHome() {
        const app = document.getElementById('app');
        const salon = this.state.salon;
        
        app.innerHTML = `
            <div class="page">
                <div class="header">
                    <div class="salon-info">
                        ${salon?.logo_url ? `<img src="${salon.logo_url}" alt="Logo" class="salon-logo">` : ''}
                        <h1>${salon?.name || '–°–∞–ª–æ–Ω –ö—Ä–∞—Å–æ—Ç—ã'}</h1>
                    </div>
                </div>
                
                <div class="content">
                    <div class="card">
                        <h2>–û —Å–∞–ª–æ–Ω–µ</h2>
                        <p>${salon?.description || '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Å–∞–ª–æ–Ω!'}</p>
                        
                        <div class="salon-details">
                            <div class="detail-item">
                                <span class="icon">üìç</span>
                                <div>
                                    <strong>–ê–¥—Ä–µ—Å</strong>
                                    <p>${salon?.address || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
                                </div>
                            </div>
                            
                            <div class="detail-item">
                                <span class="icon">üìû</span>
                                <div>
                                    <strong>–¢–µ–ª–µ—Ñ–æ–Ω</strong>
                                    <p>${salon?.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
                                </div>
                            </div>
                            
                            <div class="detail-item">
                                <span class="icon">üïê</span>
                                <div>
                                    <strong>–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã</strong>
                                    <p>${salon?.working_hours || '–£—Ç–æ—á–Ω—è–π—Ç–µ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É'}</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <button class="btn btn-primary btn-large" id="book-button">
                        –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥—É
                    </button>
                </div>
                
                ${this.renderBottomNav('home')}
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è"
        const bookButton = document.getElementById('book-button');
        if (bookButton) {
            bookButton.addEventListener('click', () => {
                router.navigate('/masters');
            });
        }
    }
    
    /**
     * –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –º–∞—Å—Ç–µ—Ä–æ–≤
     */
    async renderMasters() {
        showLoading();
        
        try {
            const masters = await this.api.getMasters();
            this.state.masters = masters;
            
            const app = document.getElementById('app');
            
            app.innerHTML = `
                <div class="page">
                    <div class="header">
                        <h1>–ù–∞—à–∏ –º–∞—Å—Ç–µ—Ä–∞</h1>
                    </div>
                    
                    <div class="content">
                        <div class="masters-grid">
                            ${masters.map(master => `
                                <div class="master-card" data-master-id="${master.id}">
                                    <img src="${master.photo_url || '/assets/images/placeholder.jpg'}" alt="${master.name}">
                                    <div class="master-info">
                                        <h3>${master.name}</h3>
                                        <p class="specialty">${master.specialty}</p>
                                        <div class="master-stats">
                                            <span>‚≠ê ${master.rating || '5.0'}</span>
                                            <span>üìÖ ${master.experience} –ª–µ—Ç</span>
                                        </div>
                                    </div>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                    
                    ${this.renderBottomNav('masters')}
                </div>
            `;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –º–∞—Å—Ç–µ—Ä–æ–≤
            document.querySelectorAll('.master-card').forEach(card => {
                card.addEventListener('click', () => {
                    const masterId = card.getAttribute('data-master-id');
                    router.navigate(`/masters/${masterId}`);
                });
            });
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—Å—Ç–µ—Ä–æ–≤:', error);
            this.showErrorScreen('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –º–∞—Å—Ç–µ—Ä–æ–≤');
        } finally {
            hideLoading();
        }
    }
    
    /**
     * –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—Å—Ç–µ—Ä–µ
     */
    async renderMasterDetail(masterId) {
        showLoading();
        
        try {
            const master = await this.api.getMaster(masterId);
            const services = await this.api.getMasterServices(masterId);
            
            this.state.currentMaster = master;
            this.state.services = services;
            
            const app = document.getElementById('app');
            
            app.innerHTML = `
                <div class="page">
                    <div class="header">
                        <button class="btn-back" data-back-route="/masters">
                            <i class="fas fa-arrow-left"></i>
                        </button>
                        <h1>–ú–∞—Å—Ç–µ—Ä</h1>
                    </div>
                    
                    <div class="content">
                        <div class="master-detail-card">
                            <img src="${master.photo_url || '/assets/images/placeholder.jpg'}" alt="${master.name}" class="master-photo">
                            <h2>${master.name}</h2>
                            <p class="specialty">${master.specialty}</p>
                            <div class="master-stats">
                                <span>‚≠ê ${master.rating || '5.0'}</span>
                                <span>üìÖ ${master.experience} –ª–µ—Ç</span>
                            </div>
                        </div>
                        
                        ${master.description ? `
                            <div class="card">
                                <h3>–û –º–∞—Å—Ç–µ—Ä–µ</h3>
                                <p>${master.description}</p>
                            </div>
                        ` : ''}
                        
                        <div class="card">
                            <h3>–£—Å–ª—É–≥–∏</h3>
                            <div class="services-list">
                                ${services.map(service => `
                                    <div class="service-item">
                                        <div class="service-info">
                                            <h4>${service.name}</h4>
                                            ${service.description ? `<p>${service.description}</p>` : ''}
                                            <div class="service-meta">
                                                <span><i class="fas fa-clock"></i> ${service.duration} –º–∏–Ω</span>
                                                <span class="price"><i class="fas fa-ruble-sign"></i> ${service.price} ‚ÇΩ</span>
                                            </div>
                                        </div>
                                        <button 
                                            class="btn btn-primary book-service-btn" 
                                            data-master-id="${masterId}" 
                                            data-service-id="${service.id}">
                                            –ó–∞–ø–∏—Å–∞—Ç—å—Å—è
                                        </button>
                                    </div>
                                `).join('')}
                            </div>
                        </div>
                    </div>
                    
                    ${this.renderBottomNav('masters')}
                </div>
            `;
            
            // ‚úÖ –ì–õ–ê–í–ù–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è"
            document.querySelectorAll('.book-service-btn').forEach(btn => {
                btn.addEventListener('click', (e) => {
                    e.preventDefault();
                    const masterId = parseInt(btn.getAttribute('data-master-id'));
                    const serviceId = parseInt(btn.getAttribute('data-service-id'));
                    
                    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ bookingFlow
                    if (window.bookingFlow) {
                        window.bookingFlow.start(masterId, serviceId);
                    } else {
                        console.error('bookingFlow –Ω–µ –Ω–∞–π–¥–µ–Ω!');
                        showToast('–û—à–∏–±–∫–∞: –º–æ–¥—É–ª—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω', 'error');
                    }
                });
            });
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
            const backBtn = document.querySelector('.btn-back');
            if (backBtn) {
                backBtn.addEventListener('click', () => {
                    const route = backBtn.getAttribute('data-back-route');
                    router.navigate(route);
                });
            }
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—Å—Ç–µ—Ä–∞:', error);
            this.showErrorScreen('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—Å—Ç–µ—Ä–µ');
        } finally {
            hideLoading();
        }
    }
    
    /**
     * –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –º–æ–∏ –∑–∞–ø–∏—Å–∏
     */
    async renderMyBookings() {
        showLoading();
        
        try {
            const bookings = await this.api.getMyBookings();
            this.state.bookings = bookings;
            
            const app = document.getElementById('app');
            
            // –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ
            const upcoming = bookings.filter(b => 
                b.status === 'confirmed' && new Date(`${b.date}T${b.time_start}`) > new Date()
            );
            const past = bookings.filter(b => 
                b.status === 'completed' || new Date(`${b.date}T${b.time_start}`) <= new Date()
            );
            
            app.innerHTML = `
                <div class="page">
                    <div class="header">
                        <h1>–ú–æ–∏ –∑–∞–ø–∏—Å–∏</h1>
                    </div>
                    
                    <div class="content">
                        ${upcoming.length === 0 && past.length === 0 ? `
                            <div class="empty-state">
                                <i class="fas fa-calendar-times"></i>
                                <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π</p>
                                <button class="btn btn-primary" data-nav-route="/masters">
                                    –ó–∞–ø–∏—Å–∞—Ç—å—Å—è
                                </button>
                            </div>
                        ` : `
                            <div class="bookings-tabs">
                                <button class="tab active" data-tab="upcoming">
                                    –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ (${upcoming.length})
                                </button>
                                <button class="tab" data-tab="past">
                                    –ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ (${past.length})
                                </button>
                            </div>
                            
                            <div class="tab-content active" data-content="upcoming">
                                ${upcoming.length === 0 ? `
                                    <div class="empty-state">
                                        <p>–ù–µ—Ç –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –∑–∞–ø–∏—Å–µ–π</p>
                                    </div>
                                ` : `
                                    <div class="bookings-list">
                                        ${upcoming.map(booking => this.renderBookingCard(booking)).join('')}
                                    </div>
                                `}
                            </div>
                            
                            <div class="tab-content" data-content="past">
                                ${past.length === 0 ? `
                                    <div class="empty-state">
                                        <p>–ù–µ—Ç –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π</p>
                                    </div>
                                ` : `
                                    <div class="bookings-list">
    /**
     * –û—Ç—Ä–∏—Å–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –∑–∞–ø–∏—Å–∏
     */
    renderBookingCard(booking) {
        const isFuture = new Date(`${booking.date}T${booking.time_start}`) > new Date();
        
        return `
            <div class="booking-card status-${booking.status}">
                <div class="booking-header">
                    <span class="booking-date">${formatDate(booking.date)}</span>
                    <span class="booking-status ${booking.status}">
                        ${this.getStatusText(booking.status)}
                    </span>
                </div>
                
                <div class="booking-info">
                    <div class="booking-info-row">
                        <span class="booking-info-icon"><i class="fas fa-user"></i></span>
                        <span class="booking-info-label">–ú–∞—Å—Ç–µ—Ä:</span>
                        <span class="booking-master-name">${booking.master?.name || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                    </div>
                    <div class="booking-info-row">
                        <span class="booking-info-icon"><i class="fas fa-cut"></i></span>
                        <span class="booking-info-label">–£—Å–ª—É–≥–∞:</span>
                        <span class="booking-info-value">${booking.service?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</span>
                    </div>
                    <div class="booking-info-row">
                        <span class="booking-info-icon"><i class="fas fa-clock"></i></span>
                        <span class="booking-info-label">–í—Ä–µ–º—è:</span>
                        <span class="booking-info-value">${booking.time_start} - ${booking.time_end}</span>
                    </div>
                    <div class="booking-info-row">
                        <span class="booking-info-icon"><i class="fas fa-ruble-sign"></i></span>
                        <span class="booking-info-label">–¶–µ–Ω–∞:</span>
                        <span class="booking-info-value">${booking.price} ‚ÇΩ</span>
                    </div>
                </div>
                
                ${isFuture && booking.status === 'confirmed' ? `
                    <div class="booking-actions">
                        <button class="btn-danger" onclick="window.app.cancelBooking(${booking.id})">
                            –û—Ç–º–µ–Ω–∏—Ç—å
                        </button>
                    </div>
                ` : ''}
            </div>
        `;
    }
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–ø–∏—Å–µ–π:', error);
            this.showErrorScreen('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞–ø–∏—Å–∏');
        } finally {
            hideLoading();
        }
    }
    
    /**
     * –û—Ç—Ä–∏—Å–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –∑–∞–ø–∏—Å–∏
     */
    renderBookingCard(booking) {
        const isFuture = new Date(`${booking.date}T${booking.time_start}`) > new Date();
        
        return `
            <div class="booking-card">
                <div class="booking-header">
                    <span class="booking-date">${formatDate(booking.date)}</span>
                    <span class="booking-status status-${booking.status}">
                        ${this.getStatusText(booking.status)}
                    </span>
                </div>
                
                <div class="booking-body">
                    <div class="booking-master">
                        <img src="${booking.master?.photo_url || '/assets/images/placeholder.jpg'}" alt="${booking.master?.name}">
                        <div>
                            <strong>${booking.master?.name || '–ú–∞—Å—Ç–µ—Ä'}</strong>
                            <span>${booking.service?.name || '–£—Å–ª—É–≥–∞'}</span>
                        </div>
                    </div>
                    
                    <div class="booking-details">
                        <span><i class="fas fa-clock"></i> ${booking.time_start} - ${booking.time_end}</span>
                        <span><i class="fas fa-ruble-sign"></i> ${booking.price} ‚ÇΩ</span>
                    </div>
                </div>
                
                ${isFuture && booking.status === 'confirmed' ? `
                    <div class="booking-actions">
                        <button class="btn btn-secondary btn-sm" data-booking-id="${booking.id}" data-action="cancel">
                            –û—Ç–º–µ–Ω–∏—Ç—å
                        </button>
                    </div>
                ` : ''}
            </div>
        `;
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
     */
    getStatusText(status) {
        const statusTexts = {
            'confirmed': '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ',
            'completed': '–ó–∞–≤–µ—Ä—à–µ–Ω–æ',
            'cancelled': '–û—Ç–º–µ–Ω–µ–Ω–æ',
            'no_show': '–ù–µ –ø—Ä–∏—à—ë–ª'
        };
        return statusTexts[status] || status;
    }

    /**
     * –û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
     */
    async cancelBooking(bookingId) {
        if (!confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å?")) {
            return;
        }
        
        try {
            showLoading();
            await this.api.cancelBooking(bookingId);
            showToast("–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞", "success");
            
            // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π
            await this.renderMyBookings();
            
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –∑–∞–ø–∏—Å–∏:", error);
            showToast("–û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –∑–∞–ø–∏—Å–∏", "error");
        } finally {
            hideLoading();
        }
    }
    
    /**
     * –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
     */
    renderProfile() {
        const app = document.getElementById('app');
        const user = window.Telegram?.WebApp?.initDataUnsafe?.user;
        
        app.innerHTML = `
            <div class="page">
                <div class="header">
                    <h1>–ü—Ä–æ—Ñ–∏–ª—å</h1>
                </div>
                
                <div class="content">
                    <div class="card">
                        <h3>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                        ${user ? `
                            <div class="profile-info">
                                <div class="info-row">
                                    <span>–ò–º—è:</span>
                                    <strong>${user.first_name || ''} ${user.last_name || ''}</strong>
                                </div>
                                <div class="info-row">
                                    <span>Username:</span>
                                    <strong>@${user.username || '–Ω–µ —É–∫–∞–∑–∞–Ω'}</strong>
                                </div>
                            </div>
                        ` : `
                            <p>–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞</p>
                        `}
                    </div>
                </div>
                
                ${this.renderBottomNav('profile')}
            </div>
        `;
    }
    
    /**
     * –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –Ω–∏–∂–Ω—é—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
     */
    renderBottomNav(active = '') {
        return `
            <nav class="bottom-nav">
                <div class="nav-item ${active === 'home' ? 'active' : ''}" data-route="/">
                    <i class="fas fa-home"></i>
                    <span>–ì–ª–∞–≤–Ω–∞—è</span>
                </div>
                <div class="nav-item ${active === 'masters' ? 'active' : ''}" data-route="/masters">
                    <i class="fas fa-users"></i>
                    <span>–ú–∞—Å—Ç–µ—Ä–∞</span>
                </div>
                <div class="nav-item ${active === 'bookings' ? 'active' : ''}" data-route="/bookings">
                    <i class="fas fa-calendar-check"></i>
                    <span>–ó–∞–ø–∏—Å–∏</span>
                </div>
                <div class="nav-item ${active === 'profile' ? 'active' : ''}" data-route="/profile">
                    <i class="fas fa-user"></i>
                    <span>–ü—Ä–æ—Ñ–∏–ª—å</span>
                </div>
            </nav>
        `;
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —ç–∫—Ä–∞–Ω –æ—à–∏–±–∫–∏
     */
    showErrorScreen(message) {
        const app = document.getElementById('app');
        app.innerHTML = `
            <div class="error-screen">
                <div class="error-icon">
                    <i class="fas fa-exclamation-triangle"></i>
                </div>
                <h2>–û—à–∏–±–∫–∞</h2>
                <p>${message}</p>
                <button class="btn btn-primary" onclick="location.reload()">
                    –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
                </button>
            </div>
        `;
    }
}

// –°–æ–∑–¥–∞—ë–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = new App();

// –î–µ–ª–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–∑ HTML
window.app = app;
window.router = router;

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
export { App };
